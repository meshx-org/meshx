{{!
// Copyright 2024 MeshX Authors. All rights reserved.
// Copyright 2018 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
}}

// WARNING: This file is machine generated by midlgen.

#![allow(
    unused_parens, // one-element-tuple-case is not a tuple
    unused_mut, // not all args require mutation, but many do
    nonstandard_style, // auto-caps does its best, but is not always successful
)]

#![recursion_limit="512"]
#![warn(clippy::all)]
#![allow(unused_parens, unused_mut, unused_imports, nonstandard_style)]

use fiber as fx;

use {
    bitflags::bitflags,
    fiber_status as fx_status,
    futures::future::{self, MaybeDone, TryFutureExt},
    midl::{
        endpoints::{ControlHandle as _, Responder as _},
        client::QueryResponseFut,
    },
};

{{#each consts}}
{{> Const this }}
{{/each}}
{{#each enums}}
{{> Enum this }}
{{/each}}
{{#each unions}}
{{> Union this }}
{{/each}}
{{#each structs}}
{{> Struct this }}
{{/each}}
{{#each tables}}
{{> Table this }}
{{/each}}
{{#each protocols}}
{{> Protocol this }}
{{/each}}

mod internal {
    use super::*;

    {{#each structs }}
    {{> StructInternal this }}
    {{/each }}
    {{#each unions }}
    {{> UnionInternal this }}
    {{/each }}
    {{#each tables}}
    {{> TableInternal this }}
    {{/each}}
    {{#each enums}}
    {{> EnumInternal this }}
    {{/each}}
}